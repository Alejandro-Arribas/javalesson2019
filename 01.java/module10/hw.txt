video: https://youtu.be/WsBCZ9gV9IY

1. Создать аннотацию RunIt применимую к методу, которая принимает параметры для метода. 
Написать код, который вызовет метод, помеченный этой аннотацией, и передаст параметры аннотации в вызываемый метод.

@RunIt(a=2, b=5)
public void test(int a, int b) {...}

2. Создать аннотацию Value, которая принимает строковый аргумент.
Аннотацию можно применять к полям класса.

Создать класс, в котором применить аннотацию к одному или нескольким полям:

class Service {

	@Value("db.properties")
	private String properties;
	...

}

Дополнить класс Service нужными геттерами и сеттерами, переопределить метод toString.
Примечание: поле класса помеченное аннотацией Value НЕ инициализировать к констукторах.

Написать код, который позволит создать класс Service, и присвоить значение аргумента аннотации
Value соответсвующему полю класса. 

Привести пример применения кода.

3. Дополнительное задание
Написать тест класса из предыдущего домашнего задания в отсутвии такового класса (тест должен компилироваться, т.е. используя рефлексию) 

 * Задание 4
 * Создайте класс Дробь (Fraction). Необходимо хранить в полях
 * класса: числитель и знаменатель. Реализуйте методы клас-
 * са для ввода данных, вывода данных, реализуйте доступ
 * к отдельным полям через методы класса. Также создайте
 * методы класса для выполнения арифметических операций
 * (сложение (add), вычитание (minus), умножение (multiple), деление (division), и т.д.).
 * Методы должны принимать в качестве аргумента вторую дроб и
 * возвращать результат в виде дроби.
 * Создайте два конструктора: по умолчанию, и с параметрами